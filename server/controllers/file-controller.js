const pool = require('../settings/db')
const config = require('config')
const fs = require('fs')
const path = require ('path')


class FileController {
    async uploadAvatar(req, res) {

        try {

            const {userId} = req.body

            const file = req.file
            console.log('üì¢ [file-controller.js:13]', file.filename, userId);

            const user = await pool.query(`SELECT * FROM ?? WHERE ?? = ?`, [
                config.get('tableOne'),
                config.get('fieldOneTableOne'),
                userId
            ]).then((data) => {
                return data[0][0]
            })

            console.log( 'üìå:',user,'üå¥ üèÅ')


            //–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–∞–Ω–¥–æ–º–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —Ñ–∞–π–ª–∞ —á—Ç–æ-–±—ã –æ–Ω –±—ã–ª —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–µ–Ω –º–æ–¥—É–ª—å UUID 
            //const avatarName = Uuid.v4() + '.jpg'
            //
            // console.log('üì¢ [file-controller.js:25]', user);

            //const path = '~\\–î–æ–∫—É–º–µ–Ω—Ç\\ReactJS\\Mern-React\\static'





            // fs.readFile(file, function(err, data){
            //     console.log('üì¢ [file-controller.js:36]', data, err);
            // });



            console.log('üì¢ [file-controller.js:41]', '—Å—Ä–∞–±–æ—Ç–∞–ª–æ');


            //—Å–æ–∑–¥–∞–µ–º –ø—É—Ç—å –∫—É–¥–∞ –±—É–¥–µ–º –ø–µ—Ä–µ–º–µ—â–∞—Ç—å —Ñ–∞–π–ª config.get('staticPath') + '\\' + avatarName
            //await file.mv(path.resolve(__dirname, 'static', avatarName)) //resolve - –∞–¥–∞–ø–∏—Ç–∏—Ä—É–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—É—Ç—å –∫ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ

            await pool.query(
                `UPDATE ?? SET ?? = ? WHERE ??.?? = ?`,
                [
                    config.get('tableOne'),
                    config.get('fieldSixTableOne'),
                    file.filename,
                    config.get('tableOne'),
                    config.get('fieldOneTableOne'),
                    user.id
                ]
            )

            res.status(201).json({avatar: file.filename, message:'–ê–≤–∞—Ç–∞—Ä –∏–∑–º–µ–Ω–µ–Ω...'})
            
        } catch (error) {
            console.log('üì¢ [profile-controller.js:46]', '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫');
        }
    }

    async deleteAvatar(req, res) {
        try {


            const user = await pool.query(`SELECT * FROM ?? WHERE ?? = ?`, [
                config.get('tableOne'),
                config.get('fieldOneTableOne'),
                req.body.userId
            ])

            await pool.query(
                `UPDATE ?? SET ?? = ? WHERE ??.?? = ?`,
                [
                    config.get('tableOne'),
                    config.get('fieldSixTableOne'),
                    null, 
                    config.get('tableOne'),
                    config.get('fieldOneTableOne'),
                    user.userId
                ]
            )
            fs.unlinkSync(config.get('staticPath') + '\\' + user.avatar)

            return res.json(user, {massage:"–ê–≤–∞—Ç–∞—Ä —É–¥–∞–ª–µ–Ω!"})
        } catch (error) {
            console.log('üì¢ [profile-controller.js:9]', error);
        }
    }
}


module.exports = new FileController